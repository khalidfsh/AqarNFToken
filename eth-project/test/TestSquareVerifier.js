// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');
const ZokratesProof = require("../../zokrates/code/square/proofs/main/proof.json");

contract("SquareVerifier", accounts => {
    const deployerAccount = accounts[0];

    beforeEach(async() => {
        this.contract = await Verifier.new({from: deployerAccount});
    });

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
    it("can verify with correct proof", async() => {
        let success = await this.contract.verifyTx.call(...Object.values(ZokratesProof.proof), ZokratesProof.input);

        assert(success)
    });
// Test verification with incorrect proof
    it("verifing incorrect proof input will revert", async() => {
        let success = await this.contract.verifyTx.call(...Object.values(ZokratesProof.proof), [4, 1]);

        assert(!success)
    });

})